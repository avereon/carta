<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.avereon.pom</groupId>
		<artifactId>mod</artifactId>
		<version>3.3.1</version>
	</parent>

	<groupId>com.avereon</groupId>
	<artifactId>carta</artifactId>
	<version>1.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Cartesia</name>
	<description>2D/3D computer aided design.</description>
	<inceptionYear>2020</inceptionYear>

	<repositories>
		<repository>
			<id>avn</id>
			<url>https://repo.avereon.com/avn</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>avn</id>
			<url>https://repo.avereon.com/avn</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<curve.version>[0.2,)</curve.version>
		<xenon.version>[1.6-SNAPSHOT,)</xenon.version>
		<zerra.version>[0.8-SNAPSHOT,)</zerra.version>
		<monocle.version>jdk-12.0.1+2</monocle.version>
		<jep.version>2.24</jep.version>
		<images-folder>target/main/images</images-folder>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.avereon</groupId>
			<artifactId>curve</artifactId>
			<version>${curve.version}</version>
		</dependency>

		<dependency>
			<groupId>jep</groupId>
			<artifactId>jep</artifactId>
			<version>${jep.version}</version>
		</dependency>

		<dependency>
			<groupId>com.avereon</groupId>
			<artifactId>xenon</artifactId>
			<classifier>tests</classifier>
			<version>${xenon.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.avereon</groupId>
			<artifactId>zerra</artifactId>
			<version>${zerra.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>openjfx-monocle</artifactId>
			<version>${monocle.version}</version>
			<scope>test</scope>
			<exclusions>
				<!-- Exclude the openjfx libraries, they are already available -->
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>14</source>
					<target>14</target>
				</configuration>
				<!--				<executions>-->
				<!--					<execution>-->
				<!--						<id>default-testCompile</id>-->
				<!--						<configuration>-->
				<!--							<release>14</release>-->
				<!--							<compilerArgs>-->
				<!--								<arg>&#45;&#45;patch-module</arg>-->
				<!--								<arg>com.avereon.xenon=${settings.localRepository}/com/avereon/xenon/${xenon.version}/xenon-${xenon.version}-tests.jar</arg>-->
				<!--							</compilerArgs>-->
				<!--						</configuration>-->
				<!--					</execution>-->
				<!--				</executions>-->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- Version comes from parent -->
				<configuration>
					<!-- The argLine and systemPropertyVariables should match the failsafe configuration below -->
					<argLine>
						--add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia.command=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia.cursor=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia.data=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia.icon=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia.math=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia.tool=ALL-UNNAMED
						--add-opens=com.avereon.cartesia/com.avereon.cartesia.tool.view=ALL-UNNAMED
					</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>testui</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<!-- Version comes from parent -->
						<executions>
							<execution>
								<id>testui</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<forkCount>1</forkCount>
									<reuseForks>false</reuseForks>
									<runOrder>alphabetical</runOrder>
									<argLine>
										-Xmx128m
										--add-opens=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
										--add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia.command=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia.cursor=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia.data=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia.icon=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia.math=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia.tool=ALL-UNNAMED
										--add-opens=com.avereon.cartesia/com.avereon.cartesia.tool.view=ALL-UNNAMED
									</argLine>
									<systemPropertyVariables>
										<!-- Set testfx.setup.timeout to a reasonable time -->
										<!-- This might be as low as 1000 for a fast computer -->
										<!-- This might be as high as 5000 for a slow computer -->
										<testfx.setup.timeout>5000</testfx.setup.timeout>
										<!-- Set testfx.headless to true to run FX tests in headless mode -->
										<testfx.headless>true</testfx.headless>
										<!-- Set testfx.robot to glass when running tests in headless mode -->
										<testfx.robot>glass</testfx.robot>
										<!-- Set prism.order to sw when running tests in headless mode -->
										<!-- https://wiki.openjdk.java.net/display/OpenJFX/Monocle -->
										<prism.order>sw</prism.order>
										<!-- Not sure what this setting does but it's in all the examples found -->
										<prism.text>t2k</prism.text>
										<!-- Set java.awt.headless to true when running tests in headless mode -->
										<java.awt.headless>true</java.awt.headless>
									</systemPropertyVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>packs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.avereon</groupId>
						<artifactId>cameo</artifactId>
						<executions>
							<execution>
								<id>render</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>render</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<class>com.avereon.cartesia.icon.CartesiaIcon</class>
											<target>${images-folder}/product.png</target>
											<theme>light</theme>
										</image>
									</images>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
